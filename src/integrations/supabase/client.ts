
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jksjyhqelduduxmkcuae.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imprc2p5aHFlbGR1ZHV4bWtjdWFlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4OTgyNTQsImV4cCI6MjA1NzQ3NDI1NH0.9GJUCP13uxWPFXg3x8XO0AVqU5qKATv-N9tjTIPiI_8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Storage helper functions
export const getStorageUrl = (bucket: string, path: string) => {
  return supabase.storage.from(bucket).getPublicUrl(path).data.publicUrl;
};

// Custom type for project_disputes table until Database type is regenerated
export type ProjectDispute = {
  id: string;
  project_id: string;
  quote_id: string;
  user_id: string;
  reason: string;
  at_fault_statement: string;
  evidence_files?: any;
  freelancer_evidence?: any[];
  client_evidence?: any[];
  submission_deadline: string;
  admin_decision_deadline: string;
  admin_decision?: string | null;
  admin_notes?: string | null;
  admin_decision_date?: string | null;
  reviewed_by?: string | null;
  created_at: string;
  updated_at: string;
  // Related tables
  projects?: any;
  quotes?: any;
  freelancer?: any;
  client?: any;
}
